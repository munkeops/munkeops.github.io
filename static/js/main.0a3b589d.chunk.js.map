{"version":3,"sources":["images/cross.png","components/navbar.js","pages/home.js","pages/about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","href","target","Home","About","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,mC,yQCyB5BC,MArBf,WACI,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,WAAU,4BAAI,kBAAC,IAAD,CAAMC,GAAK,SAAX,qBAC7B,yBAAKD,UAAU,gBAAe,4BAAI,kBAAC,IAAD,CAAMC,GAAK,SAAX,QAGlC,yBAAKD,UAAU,cACX,6BAAK,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAKL,6BAAK,uBAAGC,KAAK,oCAAoCC,OAAO,UAAnD,UACL,6BAAK,kBAAC,IAAD,CAAMF,GAAG,UAAT,a,MCmBNG,MA/Bf,WAEI,OACI,yBAAKJ,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,UAEf,yBAAKA,UAAU,cAMX,6BAAK,uBAAGE,KAAK,8BAA8BC,OAAO,UAA7C,WACL,6BAAK,uBAAGD,KAAK,gEAAgEC,OAAO,UAA/E,aAIL,6BAAK,uBAAGD,KAAK,0DAA0DC,OAAO,UAAzE,e,mCCuBVE,MAzCf,WAEI,OACI,yBAAKL,UAAU,SACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WAIX,6BACA,6BALJ,yCAM0C,6BAAK,6BAAK,6BANpD,iCAOkC,6BAPlC,uCAQwC,6BARxC,sBASuB,6BAGnB,6BACA,6BAbJ,gDAqBJ,iC,OCSDM,MA3Bf,WAGE,OACE,yBAAKN,UAAU,OAGf,kBAAC,IAAD,KACQ,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAQ,kBAAC,EAAD,OAQ1B,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAS,kBAAC,EAAD,UCvBnBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0a3b589d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.8106c656.png\";","import React from 'react';\nimport './navbar.css';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar(){\n    return(\n        <div className=\"Navbar\">\n            <div className=\"Heading\"><h2><Link to = \"/home\">Rohan Nedungadi</Link></h2></div>\n            <div className=\"HeadingSmall\"><h2><Link to = \"/home\">RN</Link></h2></div>\n\n            {/* <div className=\"Heading\"><h2><Link to = \"/admin\">Rohan R Nedungadi</Link></h2></div> */}\n            <div className=\"NavButtons\">\n                <div><Link to=\"/home\">Home</Link></div>\n                {/* <div><Link to=\"/travel\">Travel Diaries</Link></div> */}\n                {/* <div><Link to=\"/movies\">Movies</Link></div> */}\n                {/* <div><Link to=\"/projects\">Projects</Link></div> */}\n                {/* <div><Link to=\"/blogs\">Blogs</Link></div> */}\n                <div><a href=\"https://munkeops.github.io/Blogs/\" target=\"_blank\">Blogs</a></div>\n                <div><Link to=\"/about\">About</Link></div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar","\nimport React from 'react';\nimport Navbar from '../components/navbar.js'\nimport './home.css'\n// import { Link } from 'react-router-dom';\n\nfunction Home(){\n\n    return(\n        <div className=\"Home\">\n            <Navbar/>\n            <div className=\"CentralBox\">\n                <div className=\"Image\"/>\n                {/* <div className=\"Name\"><h2>Rohan R Nedungadi</h2></div> */}\n                <div className=\"Navigation\">\n                    {/* <div><Link to=\"/travel\">Travel Diary</Link></div>\n                    <div><Link to=\"/movies\">Movie Discussions</Link></div>\n                    <div><Link to=\"/thoughts\">Random Thoughts</Link></div>\n                    <div><Link to=\"/projects\">Projects</Link></div> */}\n                    {/* <div><Link to=\"/blogs\">Blogs</Link></div> */}\n                    <div><a href=\"https://github.com/munkeops\" target=\"_blank\">GitHub</a></div>\n                    <div><a href=\"https://www.linkedin.com/in/rohan-russel-nedungadi-76b249165/\" target=\"_blank\">LinkedIn</a></div>\n                    {/* <div><Link to=\"/About\">About</Link></div> */}\n                    \n\n                    <div><a href=\"https://github.com/munkeops/Resume/blob/main/Resume.pdf\" target=\"_blank\">Resume</a></div>\n\n\n                </div>\n\n            </div>\n            \n\n        </div>\n    )\n}\n\nexport default Home","import React from 'react';\nimport Navbar from '../components/navbar.js'\n// import AboutPost from \"../components/aboutPosts\"\nimport './about.css'\n// import { Link } from 'react-router-dom';\nimport PostsForAbout from '../components/aboutPosts';\n\nfunction About(){\n\n    return(\n        <div className=\"About\">\n            <Navbar/>\n            <div className=\"AboutBody\">\n                <div className=\"Bio\">\n                    <div className=\"ImageBio\"></div>\n                    <div className=\"BioData\">\n                        {/* <br/>\n                        Hey, my name's Rohan Nedungadi<br/>\n                        <br/> */}\n                        <br/>\n                        <br/>\n                        Jr Machine Learning Engineer @ GuiseAI<br/><br/><br/>\n                        Computer Science Undergraduate<br/> \n                        Ecole Centrale School of Engineering<br/>\n                        Mahindra University<br/>\n                        {/* MEC batch of 2021<br/> */}\n                        {/* <br/> */}\n                        <br/>\n                        <br/>\n                        Machine Learning | Computer Vision | Webdev\n                        {/* <img src=\"https://img.icons8.com/cotton/64/000000/circled-chevron-down.png\"/> */}\n\n\n                    </div>\n\n                </div>\n                <div>\n                </div>\n                {/* <PostsForAbout/> */}\n                \n\n            \n\n            </div>\n        </div>\n    )\n}\n\nexport default About","\nimport React from 'react'\n// import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/home.js'\n// import Blogs from './pages/blogs.js'\n// import Admin from './auth/admin'\nimport About from './pages/about'\nimport {\n  BrowserRouter as Router,\n  // Switch,\n  Route,\n  // useParams,\n  // Link,\n  // Redirect,\n  // browserHistory\n} from 'react-router-dom';\n//basename={process.env.PUBLIC_URL}>\nfunction App() {\n\n  // const [posts,setPosts]=useState([])\n  return (\n    <div className=\"App\">\n      \n    \n    <Router > \n            <Route exact path='/'><Home/></Route>\n            <Route exact path='/home'><Home/></Route>\n\n            {/* <Route exact path='/blogs'><Blogs posts={posts} setPosts={setPosts}/></Route> */}\n            {/* <Route exact path='/travel'><Blogs section=\"travel\"/></Route> */}\n            {/* <Route exact path='/projects'><Blogs section=\"travel\"/></Route> */}\n            {/* <Route exact path='/movies'><Blogs section=\"travel\"/></Route> */}\n\n\n            <Route exact path='/about'><About/></Route>\n            {/* <Route exact path='/admin'><Admin posts={posts} setPosts={setPosts}/></Route> */}\n            \n\n    </Router>\n\n    </div> \n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}